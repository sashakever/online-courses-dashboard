{"version":3,"sources":["components/pages/course-page.js","components/title/index.js","components/title/title.js","components/button/index.js","components/button/button.js","components/button-text/index.js","components/button-text/button-text.js","components/statistics/index.js","components/statistics/statistics.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/courses-service-context/courses-service-context.js","components/hoc/with-course-service.js","actions/types-for-actions.js","actions/index.js","components/course-item/index.js","components/course-item/course-item.js","components/courses-slider/courses-slider.js","components/courses-slider/index.js","components/courses-list/courses-list.js","components/courses-list/index.js","components/pages/home-page.js","components/pages/notification-page.js","components/pages/settings-page.js","components/pages/user-page.js","components/side-menu/side-menu.js","components/side-menu/index.js","components/app/index.js","components/app/app.js","components/error-boundry/error-boundry.js","services/courses-service.js","reducers/course-list.js","reducers/user.js","reducers/pages.js","reducers/courses-by-user.js","reducers/index.js","store.js","index.js"],"names":["CoursePage","Title","title","isBig","clazz","className","Button","isWhite","ButtonText","isActive","onEvent","onClick","Statistics","src","alt","Spinner","ErrorIndicator","error","message","React","createContext","CoursesServiceProvider","Provider","CoursesServiceConsumer","Consumer","withCoursesService","Wrapped","props","coursesService","typesCourses","typesCoursesByUser","typesUser","typesPages","fetchCourses","dispatch","type","getCourses","then","dataCourses","payload","catch","err","fetchCoursesByUser","user","getCoursesByUser","fetchUser","getUser","dataUser","CourseItem","course","isCommon","onAction","commonBlock","coverImage","author","commonCourse","duration","rating","onViewCourse","userCourse","progress","SwiperCore","use","Navigation","CoursesSlider","courses","useState","swiper","updateSwiper","onSwiper","modules","spaceBetween","slidesPerView","loop","map","id","slidePrev","slideNext","CoursesSliderContainer","this","loading","console","log","Component","withCourseService","connect","coursesByUser","CoursesList","filteredCourses","searchText","sorted","onSortedBy","filter","item","toLowerCase","indexOf","CoursesListContainer","sortedBy","onSortByDate","onSortByTop","onSortByRating","defaultProps","coursesList","userState","welcome","slider","logInButton","userBloc","statistics","login","to","setSearchText","name","onChange","e","target","value","placeholder","NotificationPage","SettingsPage","dispath","setLogin","pass","setPass","history","useHistory","push","onSubmit","preventDefault","userSignin","password","mapDispatchToProps","onDefaultUser","SideMenu","clazzHome","clazzCourse","clazzUser","clazzNotification","clazzSettings","useLocation","pathname","split","userButton","App","path","component","HomePage","exact","UserPage","ErrorBoundry","state","hasError","errorInfo","setState","children","CoursesService","created","top","dataUserTest","dataCoursesByUser","Promise","resolve","reject","setTimeout","trim","Error","updateCourseList","action","undefined","coursesArray","sortArray","by","order","updateUser","userGuest","updatePages","pageLabel","pages","updateCourseByUser","reducer","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f751fa7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst CoursePage = () => {\r\n    return <div>Course Page</div>\r\n};\r\n\r\nexport default CoursePage;","import Title from './title';\r\nexport default Title;","import React from \"react\";\r\n\r\nimport './title.scss'\r\n\r\nconst Title = ({ title, isBig=true }) => {\r\n\r\n    const clazz = isBig ? \"title-big\" : \"title-small\";\r\n\r\n    return (\r\n        <h2 className={clazz}>{ title }</h2>\r\n    );\r\n}\r\n\r\nexport default Title;","import Button from './button';\r\nexport default Button;","import React from \"react\";\r\n\r\nimport './button.scss'\r\n\r\nconst Button = ({ title, isWhite }) => {\r\n\r\n    const clazz = isWhite ? \"buttun-white\" : \"buttun-black\";\r\n\r\n    return (\r\n        <button\r\n            className={clazz}\r\n        >\r\n            {title}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Button;","import ButtonText from './button-text';\r\nexport default ButtonText;","import React from \"react\";\r\n\r\nimport './button-text.scss'\r\n\r\nconst ButtonText = ({ title, isActive=true, onEvent }) => {\r\n\r\n    const clazz = isActive ? \"button-text button-text_active\" : \"button-text button-text_disable\";\r\n\r\n    return (\r\n        <button onClick={onEvent} className={clazz}>{ title }</button>\r\n    );\r\n}\r\n\r\nexport default ButtonText;","import Statistics from './statistics';\r\nexport default Statistics;","import React from \"react\";\r\nimport Title from \"../title\";\r\nimport ButtonText from \"../button-text\";\r\n\r\nimport './statistics.scss'\r\n//import chart from '../../img/chart.png';\r\n\r\nconst Statistics = () => {\r\n\r\n    return (\r\n        <div className=\"statistics\">\r\n            <div className=\"statistics__cols\">\r\n                <div className=\"statistics__col\">\r\n                    <div>\r\n                        <span>11</span>\r\n                        <p>Courses<br />completed</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"statistics__col\">\r\n                    <div>\r\n                        <span>4</span>\r\n                        <p>Courses<br />in progress</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"statistics__title\">\r\n                <Title title='Your statistics'/>\r\n            </div>\r\n            <div className=\"statistics__buttons\">\r\n                <ButtonText title=\"Learning Hours\" />\r\n                <ButtonText title=\"My Courses\" isActive={false} />\r\n            </div>\r\n            <img src='/img/chart.png' alt='chart'/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Statistics;","import Spinner from './spinner';\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport Title from '../title';\r\nimport './spinner.scss';\r\n\r\nconst Spinner = () => {\r\n    return <Title title='loading...'/>;\r\n};\r\n\r\nexport default Spinner;","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\nimport Title from '../title';\r\nimport './error-indicator.scss';\r\n\r\nconst ErrorIndicator = ({error}) => {\r\n    return (\r\n        <Title title={error.message}/>        \r\n    );\r\n};\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\n\r\nconst {\r\n    Provider: CoursesServiceProvider,\r\n    Consumer: CoursesServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n    CoursesServiceProvider,\r\n    CoursesServiceConsumer\r\n};\r\n","import React from 'react';\r\nimport { CoursesServiceConsumer } from '../courses-service-context';\r\n\r\nconst withCoursesService = () => (Wrapped) => {\r\n\r\n    return (props) => {        \r\n        return (\r\n            <CoursesServiceConsumer>\r\n            {\r\n                (coursesService) => {\r\n                    return (<Wrapped {...props}\r\n                        coursesService={coursesService}/>);\r\n                }\r\n            }\r\n            </CoursesServiceConsumer>\r\n    );\r\n    }\r\n};\r\n\r\nexport default withCoursesService;","\r\nconst typesCourses = {\r\n    fetch_courses_req: 'FETCH_COURSES_REQUEST',\r\n    fetch_courses_suc: 'FETCH_COURSES_SUCCESS',\r\n    fetch_courses_fail: 'FETCH_COURSES_FAILURE',\r\n    sort_by_date: 'SORT_BY_DATE',\r\n    sort_by_top: 'SORT_BY_TOP',\r\n    sort_by_rating: 'SORT_BY_RATING',\r\n    all_courses: 'ALL_COURSES',\r\n};\r\n\r\nconst typesCoursesByUser = {\r\n    fetch_courses_user_req: 'FETCH_COURSES_USER_REQUEST',\r\n    fetch_courses_user_suc: 'FETCH_COURSES_USER_SUCCESS',\r\n    fetch_courses_user_fail: 'FETCH_COURSES_USER_FAILURE',\r\n};\r\n\r\nconst typesUser = {\r\n    fetch_user_req: 'FETCH_USER_REQUEST',\r\n    fetch_user_suc: 'FETCH_USER_SUCCESS',\r\n    fetch_user_fail: 'FETCH_USER_FAILURE',\r\n    set_default_user: 'SET_DEFAULT_USER'\r\n};\r\n\r\nconst typesPages = {\r\n    set_current_page: 'SET_CURRENT_PAGE',\r\n}\r\n\r\nexport {\r\n    typesCourses,\r\n    typesCoursesByUser,\r\n    typesUser,\r\n    typesPages,\r\n};\r\n","import {typesCourses, typesCoursesByUser, typesUser, typesPages} from './types-for-actions';\r\n\r\n//COURSES=============\r\nconst coursesRequested = () => {\r\n    return {\r\n        type: typesCourses.fetch_courses_req,//'FETCH_COURSES_REQUEST'\r\n    }\r\n};\r\n\r\nconst coursesLoaded = (newCourse) => {\r\n    return {\r\n        type: typesCourses.fetch_courses_suc,//'FETCH_COURSES_SUCCESS',\r\n        payload: newCourse\r\n    };\r\n};\r\n\r\nconst coursesError = (error) => {\r\n    return {\r\n        type: typesCourses.fetch_courses_fail,//'FETCH_COURSES_FAILURE',\r\n        payload: error\r\n    };\r\n};\r\n\r\nconst fetchCourses = (coursesService, dispatch) => () => {\r\n    dispatch(coursesRequested());\r\n    coursesService.getCourses()\r\n    .then((dataCourses) => dispatch(coursesLoaded(dataCourses)))\r\n    .catch((err) => dispatch(coursesError(err)));\r\n};\r\n\r\nconst sortByDate = () => {\r\n    return {\r\n        type: typesCourses.sort_by_date,        \r\n    }\r\n}\r\n\r\nconst sortByTop = () => {\r\n    return {\r\n        type: typesCourses.sort_by_top\r\n    }\r\n}\r\n\r\nconst sortByRating = () => {\r\n    return {\r\n        type: typesCourses.sort_by_rating\r\n    }\r\n}\r\n\r\nconst allCourses = () => {\r\n    return {\r\n        type: typesCourses.all_courses\r\n    }\r\n}\r\n//COURSES_BY_USER=============\r\nconst coursesRequestedByUser = () => {\r\n    return {\r\n        type: typesCoursesByUser.fetch_courses_user_req,//'FETCH_COURSES_REQUEST'\r\n    }\r\n};\r\n\r\nconst coursesLoadedByUser = (newCourse) => {\r\n    return {\r\n        type: typesCoursesByUser.fetch_courses_user_suc,//'FETCH_COURSES_SUCCESS',\r\n        payload: newCourse\r\n    };\r\n};\r\n\r\nconst coursesErrorByUser = (error) => {\r\n    return {\r\n        type: typesCoursesByUser.fetch_courses_user_fail,//'FETCH_COURSES_FAILURE',\r\n        payload: error\r\n    };\r\n};\r\n\r\nconst fetchCoursesByUser = (coursesService, dispatch, user) => {\r\n    dispatch(coursesRequestedByUser());\r\n    coursesService.getCoursesByUser(user)\r\n    .then((dataCourses) => dispatch(coursesLoadedByUser(dataCourses)))\r\n    .catch((err) => dispatch(coursesErrorByUser(err)));\r\n};\r\n//USER==========================\r\nconst userRequested = () => {\r\n    return {\r\n        type: typesUser.fetch_user_req,//'FETCH_COURSES_REQUEST'\r\n    }\r\n};\r\n\r\nconst setDefaultUser = () => {\r\n    return {\r\n        type: typesUser.set_default_user,//'FETCH_COURSES_REQUEST'\r\n    }\r\n};\r\n\r\nconst userLoaded = (newUser) => {\r\n    return {\r\n        type: typesUser.fetch_user_suc,//'FETCH_COURSES_SUCCESS',\r\n        payload: newUser\r\n    };\r\n};\r\n\r\nconst userError = (error) => {\r\n    return {\r\n        type: typesUser.fetch_user_fail,//'FETCH_COURSES_FAILURE',\r\n        payload: error\r\n    };\r\n};\r\n\r\nconst fetchUser = (coursesService, dispatch, user) => {\r\n // console.log('fetchUser');\r\n    dispatch(userRequested());\r\n    coursesService.getUser(user)\r\n    .then((dataUser) => dispatch(userLoaded(dataUser)))\r\n    .catch((err) => dispatch(userError(err)));\r\n};\r\n\r\nconst setCurentPage = (pageLabel) => {\r\n    return {\r\n        type: typesPages.set_current_page,\r\n        payload: pageLabel\r\n    }\r\n};\r\n\r\nexport {\r\n    //COURSES\r\n    fetchCourses,\r\n    sortByDate,\r\n    sortByTop,\r\n    sortByRating,\r\n    allCourses,\r\n    //COURSES_BY_USER\r\n    fetchCoursesByUser,\r\n    //USER\r\n    fetchUser,\r\n    setDefaultUser,\r\n    setCurentPage,\r\n};","import CourseItem from './course-item'\r\nexport default CourseItem;","import React, {Fragment} from \"react\";\r\nimport Button from \"../button\";\r\nimport Title from \"../title\";\r\n\r\nimport './course-item.scss'\r\n//import ico1 from '../../img/icons/ico_01.png';\r\n\r\nconst CourseItem = ({ course, isCommon = true, onAction}) => {\r\n\r\n    //const logo = require(course.coverImage);\r\n    const commonBlock = (\r\n        <Fragment>\r\n            <div className=\"course-item__img\">\r\n                <img src={course.coverImage} alt='icon'/>\r\n            </div>\r\n            <div className=\"course-item__description\">\r\n                <div className=\"course-item__title\">\r\n                    <Title title={course.title} isBig={false}/>\r\n                </div>\r\n                <span>{course.author}</span>\r\n            </div>\r\n        </Fragment>);\r\n    \r\n    const commonCourse = (\r\n        <Fragment>\r\n            <div className=\"course-item__time\">\r\n                <i className=\"bi bi-clock\"></i>\r\n                <span>{ course.duration }</span>\r\n            </div>            \r\n            <div className=\"course-item__rating\">\r\n                <i className=\"bi bi-stars\"></i>\r\n                <span>{ course.rating }</span>\r\n            </div>\r\n            <div className=\"course-item__button\">\r\n                <Button\r\n                    title=\"View course\"\r\n                    isWhite\r\n                    onViewCourse={onAction}\r\n                />\r\n            </div>\r\n        </Fragment>\r\n    );\r\n    const userCourse = (\r\n        <Fragment>\r\n            <div className=\"course-item__progress\">{ course.progress }</div>\r\n            <div className=\"course-item__button\">\r\n                <Button title=\"Continue\" isWhite={false}/>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n    return (\r\n        <div className=\"course-item\">\r\n            {commonBlock}\r\n            {isCommon ? commonCourse : userCourse}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CourseItem;","import React, { Component, useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, { Navigation } from 'swiper';\r\nimport Spinner from \"../spinner\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\nimport { withCourseService } from '../hoc';\r\nimport { fetchCoursesByUser } from '../../actions';\r\n\r\nimport './courses-slider.scss'\r\nimport 'swiper/swiper.scss';\r\n\r\nimport CourseItem from \"../course-item\";\r\n\r\nSwiperCore.use([Navigation]);\r\n\r\nconst CoursesSlider = ({courses}) => {\r\n\r\n    const [swiper, updateSwiper] = useState(null);\r\n\r\n    const goNext = () => {\r\n        if (swiper !== null) {\r\n        swiper.slideNext();\r\n        }\r\n    };\r\n\r\n    const goPrev = () => {\r\n        if (swiper !== null) {\r\n        swiper.slidePrev();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"slider\">            \r\n            <div className=\"slider__items\">                \r\n                <Swiper\r\n                    onSwiper={updateSwiper} modules={[Navigation]}\r\n                    spaceBetween={20}\r\n                    slidesPerView={1}\r\n                    loop>\r\n                        {\r\n                        courses.map((course) => {\r\n                            return (\r\n                                <SwiperSlide key={course.id}>\r\n                                    <CourseItem course={course} isCommon={false} />\r\n                                </SwiperSlide>\r\n                            );\r\n                        })\r\n                        }                                                            \r\n                </Swiper>\r\n                    \r\n                </div>\r\n                <div className=\"slider__buttons\">\r\n                    <button\r\n                        className=\"swiper-button-prev\"\r\n                        //ref={prevRef}\r\n                        onClick={goPrev}\r\n                    >\r\n                        <i className=\"bi bi-arrow-left-circle\"></i>\r\n                    </button>\r\n                    <button\r\n                        className=\"swiper-button-next\"\r\n                        onClick={goNext}\r\n                    >\r\n                        <i className=\"bi bi-arrow-right-circle\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>           \r\n    );\r\n};\r\n\r\nclass CoursesSliderContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchCoursesByUser(this.props.user)\r\n    }\r\n\r\n    render() {\r\n        const { courses, loading, error } = this.props;\r\n        console.log(courses);\r\n        if (loading) return <Spinner />\r\n        \r\n        if (error) return <ErrorIndicator error={error} />\r\n        return <CoursesSlider courses={courses} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ coursesByUser: { courses, loading, error } }) => {\r\n    return { courses, loading, error }\r\n}\r\n\r\nconst mapDispatchToProps = ( dispatch, { coursesService }) => {\r\n    return {\r\n        fetchCoursesByUser: (user) => fetchCoursesByUser(coursesService, dispatch, user)\r\n    }\r\n}\r\n\r\nexport default withCourseService()( connect(mapStateToProps,mapDispatchToProps)(CoursesSliderContainer));","import CoursesSlider from './courses-slider';\r\nexport default CoursesSlider;","import React, {Component} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ButtonText from \"../button-text\";\r\nimport CourseItem from \"../course-item\";\r\nimport Spinner from \"../spinner\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\nimport { withCourseService } from '../hoc';\r\nimport { fetchCourses, sortByDate, sortByTop, sortByRating } from '../../actions';\r\n\r\nimport './courses-list.scss';\r\n\r\nconst CoursesList = ({ courses, searchText=\"\", sorted, onSortedBy, onViewCourse}) => {\r\n    \r\n    let filteredCourses;\r\n    if (searchText !== \"\" && searchText !== null) {\r\n        filteredCourses = courses.filter((item) => {\r\n            return item.title.toLowerCase().indexOf(searchText.toLowerCase()) > -1;\r\n        });\r\n    } else filteredCourses = courses;\r\n\r\n    return (\r\n        <div className=\"courses-list\">\r\n            <div className=\"courses-list__buttons\">\r\n                <ButtonText title=\"All Courses\"\r\n                    isActive={sorted ==='all' ? true : false}\r\n                    onEvent={() => onSortedBy('all')}/>\r\n                <ButtonText title=\"The Newest\"\r\n                    isActive={sorted ==='created' ? true : false}\r\n                    onEvent={() => onSortedBy('created')} />\r\n                <ButtonText title=\"Top Rated\"\r\n                    isActive={sorted === 'top' ? true : false}\r\n                    onEvent={() => onSortedBy('top')} />\r\n                <ButtonText title=\"Most Popular\"\r\n                    isActive={sorted ==='rating' ? true : false}\r\n                    onEvent={() => onSortedBy('rating')} />\r\n            </div>\r\n            <ul className=\"courses-list__items\">\r\n                {                    \r\n                filteredCourses.map((course) => {\r\n                    return (\r\n                        <li key={course.id}>\r\n                            <CourseItem course={course}\r\n                                onViewCourse={() => onViewCourse(course.id) }/>\r\n                        </li>\r\n                    );\r\n                })\r\n            }\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass CoursesListContainer extends Component {\r\n\r\n    componentDidMount() {        \r\n        this.props.fetchCourses();        \r\n    }\r\n\r\n    onSortedBy = (sortedBy) => {\r\n        \r\n        switch (sortedBy) {\r\n            case 'created':\r\n                this.props.onSortByDate();\r\n                break;\r\n            case 'top':\r\n                this.props.onSortByTop();\r\n                break;\r\n            case 'rating':\r\n                this.props.onSortByRating();\r\n                break;\r\n            default:\r\n                this.props.fetchCourses();  \r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { courses, loading, error,\r\n            searchText, onViewCourse, sorted} = this.props;\r\n        if (loading) return <Spinner />\r\n\r\n        if (error) return <ErrorIndicator error={error} />\r\n        \r\n        return <CoursesList\r\n            sorted={sorted}\r\n            onSortedBy={this.onSortedBy}\r\n            searchText={searchText}\r\n            courses={courses}\r\n            onViewCourse={onViewCourse} />\r\n    }\r\n}\r\n\r\nCoursesListContainer.defaultProps = {\r\n    onViewCourse: () => {}\r\n};\r\n\r\nCoursesListContainer.propTypes = {\r\n    onViewCourse: PropTypes.func,\r\n    courses: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ coursesList: { courses, loading, error, sorted }, userState: { user } }) => {\r\n    \r\n    return { courses, loading, error, user, sorted };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, { coursesService }) => {\r\n    return {\r\n        fetchCourses: fetchCourses(coursesService, dispatch),\r\n        onSortByDate: () => dispatch(sortByDate()),\r\n        onSortByTop: () =>  dispatch(sortByTop()),\r\n        onSortByRating: () =>  dispatch(sortByRating()),\r\n    }\r\n}\r\n\r\nexport default //compose(\r\n    withCourseService()(connect(mapStateToProps, mapDispatchToProps)\r\n(CoursesListContainer));\r\n    ","import CoursesList from './courses-list';\r\nexport default CoursesList;","import React, {useState} from 'react';\r\nimport { connect  } from 'react-redux';\r\nimport {  Link } from 'react-router-dom';\r\n\r\nimport Title from '../title';\r\nimport Button from '../button';\r\nimport Statistics from '../statistics';\r\nimport CoursesSlider from '../courses-slider';\r\nimport CoursesList from '../courses-list';\r\n\r\nimport './home-page.scss';\r\n\r\nconst HomePage = ({ user }) => {\r\n    //console.log(pageLabel);\r\n    let welcome = '';\r\n    let slider = '';\r\n    let logInButton = '';\r\n    let userBloc = '';\r\n    let statistics = '';\r\n    if (user.login === 'guest') {\r\n        welcome = `Please log in to the site.`;\r\n        logInButton = (<Link to=\"/user\" ><Button title='Log In' isWhite={true} /></Link>);\r\n    } else {\r\n        welcome = `It’s good to see you again.`;\r\n        slider = (\r\n            <div className=\"home-page__my-courses\">\r\n                <CoursesSlider user={user} />\r\n            </div>\r\n        );\r\n        userBloc = (\r\n            <div className=\"home-page__login\">\r\n                <i className=\"bi bi-bell\"></i>\r\n                <img src='/img/avatar.png' alt='avatar' />\r\n            </div>\r\n        );\r\n        statistics = (\r\n            <div className=\"home-page__statistics\">\r\n                <Statistics user={user} />\r\n            </div>\r\n        );\r\n    }\r\n    const [searchText, setSearchText] = useState(null);\r\n    return (\r\n        <div className=\"home-page\">\r\n            <div className=\"home-page__left-col\">\r\n                <div className=\"home-page__hi-header\">\r\n                    <h1>Hello {user.name}!</h1>\r\n                    <h3>{welcome}</h3>\r\n                    <img src='/img/hi.png' alt=\"hi\" />\r\n                </div>\r\n                {slider}\r\n                <div className=\"home-page__courses-title\">\r\n                    <Title title='Courses' />\r\n                </div>\r\n                <div className=\"home-page__courses\">\r\n                    <CoursesList searchText={ searchText }/>\r\n                </div>\r\n            </div>\r\n            <div className=\"home-page__right-col\">\r\n                <div className=\"home-page__search-login\">\r\n                    <div className=\"home-page__search\">\r\n                        <i className=\"bi bi-search\"></i>\r\n                        <input type=\"text\"\r\n                            className=\"form-control search-input\"\r\n                            onChange={(e) => setSearchText(e.target.value)}\r\n                            placeholder=\"type to search\"\r\n                        /*value={this.state.term}\r\n                        onChange={this.onSearchChange}*/\r\n                        />\r\n                    </div>\r\n                    {userBloc}\r\n                    {logInButton}\r\n                </div>\r\n                {statistics}\r\n                <div className=\"home-page__premium premium\">\r\n                    <div className=\"premium__cols\">\r\n                        <div className=\"premium__left\">\r\n                            <div className=\"premium__title\">\r\n                                <Title title=\"Learn even more!\" />\r\n                            </div>\r\n                            <div className=\"premium__text\">\r\n                                Unlock premium features<br />only for $9.99 per month.\r\n                            </div>\r\n                            <div className=\"premium__button\">\r\n                                \r\n                                    <Button\r\n                                        title=\"Go Premium\"\r\n                                        isWhite={false}\r\n                                        //onEvent={() => {return }}\r\n                                    //onCurrentPage={onCurentPage('home-page')}\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"premium__right\">\r\n                            <img src='/img/premium.png' alt='premium' />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ userState: { user } }) => {\r\n    return { user  };\r\n};\r\n\r\n/*const mapStateToProps = (state) => {    \r\n    return { state };\r\n}*/\r\n\r\nconst mapDispatchToProps = {\r\n    //onFilterByName: filterByName,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","import React from 'react';\r\n\r\nconst NotificationPage = () => {\r\n    return <div>Notification Page</div>\r\n};\r\n\r\nexport default NotificationPage;","import React from 'react';\r\n\r\nconst SettingsPage = () => {\r\n    return <div>Settings Page</div>\r\n};\r\n\r\nexport default SettingsPage;","import React, { Component, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from '../button';\r\nimport { connect } from 'react-redux';\r\nimport ErrorIndicator from \"../error-indicator\";\r\nimport { withCourseService } from '../hoc';\r\nimport { fetchUser } from '../../actions';\r\nimport Spinner from \"../spinner\";\r\nimport Title from '../title/';\r\n\r\nimport './user-page.scss';\r\n\r\n//const onSubmit = \r\n\r\nconst UserPage = ({ user, loading, error, fetchUser }) => {\r\n    const [login, setLogin] = useState(null);\r\n    const [pass, setPass] = useState(null);\r\n    let message;\r\n    /*if (loading) {\r\n        message = (<Spinner/>)\r\n    }*/\r\n    if (error) {\r\n        message = (<ErrorIndicator error={error }/>)\r\n    }\r\n    const history = useHistory();\r\n    if (!loading && !error)\r\n        history.push('/');\r\n    return (\r\n        <div className=\"user-page\">\r\n            <div className=\"user-page__sign-in sign-in\">\r\n                \r\n                <form className=\"sign-in__form\"\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        const userSignin = {\r\n                            login: login ? login : \"SuperUser\",\r\n                            password: pass ? pass : \"React2021\",\r\n                        }\r\n                        console.log(userSignin);\r\n                        fetchUser(userSignin);\r\n                    }}\r\n                >\r\n                    <Title title=\"Enter your user login and password\"/>\r\n                    <div className=\"sign-in__message\">\r\n                        { message }\r\n                    </div>\r\n                    <div className=\"sign-in__login\">\r\n                        <i className=\"bi bi-person-circle\"/>\r\n                        <input type=\"text\"\r\n                            className=\"sign-in__input\"\r\n                            placeholder=\"Enter your login [leave empty]\"\r\n                            onChange={(e) => {\r\n                                setLogin(e.target.value);\r\n                            }}\r\n                            value={login}/>\r\n                    </div>\r\n                    <div className=\"sign-in__pass\">\r\n                        <i className=\"bi bi-check-circle\"></i>\r\n                        <input type=\"password\"\r\n                            className=\"sign-in__input\"\r\n                            placeholder=\"Enter your password [leave empty]\"\r\n                            onChange={(e) => {\r\n                                setPass(e.target.value);\r\n                            }}\r\n                            value={pass} />\r\n                    </div>\r\n                    <div className=\"sign-in__button\">\r\n                        <Button title=\"Sign In\" className=\"sign-in__button\" isWhite/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nclass UserPageContainer extends Component {\r\n    \r\n    componentDidMount() {\r\n        //this\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ userState: { user, loading, error } }) => {\r\n    return {user, loading, error}\r\n}\r\n\r\nconst mapDispatchToProps = (dispath, { coursesService }) => {\r\n    return {\r\n        fetchUser: (user) => fetchUser(coursesService, dispath, user)\r\n    };\r\n};\r\n\r\nexport default withCourseService()(connect( mapStateToProps, mapDispatchToProps)(UserPage));","import React, { useEffect } from 'react';\r\n\r\nimport { useLocation, Link, useHistory} from \"react-router-dom\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setDefaultUser } from '../../actions'\r\n\r\nimport './side-menu.scss';\r\n\r\n\r\nconst SideMenu = ({ user, onDefaultUser}) => {//fill\r\n\r\n\r\n    const splitLocation  = useLocation().pathname.split(\"/\");\r\n    //console.log(splitLocation);\r\n    let clazzHome = 'bi bi-house-door';\r\n    let clazzCourse = \"bi bi-x-diamond\";\r\n    let clazzUser = \"bi bi-person\";\r\n    let clazzNotification = \"bi bi-envelope\";\r\n    let clazzSettings = \"bi bi-gear\";\r\n    switch (splitLocation[1]) {        \r\n        case 'course': clazzCourse += '-fill';\r\n            break;\r\n        case 'user': clazzUser += '-fill';\r\n            break;\r\n        case 'notification': clazzNotification += '-fill';\r\n            break;\r\n        case 'settings': clazzSettings += '-fill';\r\n            break;\r\n        case '': clazzHome += '-fill';\r\n            break;\r\n        default: clazzHome += '-fill';\r\n    }\r\n    let userButton = '';\r\n    if (user.login === 'guest') {\r\n        userButton = (<i className=\"bi bi-box-arrow-in-right\"></i>);\r\n    } else {\r\n        userButton = (<i className=\"bi bi-door-open\"></i>);\r\n    }\r\n    let history = useHistory();\r\n    return (\r\n        <div className=\"side-menu\">\r\n            <div className=\"side-menu__logo\">F.</div>\r\n            <ul className=\"side-menu__items\">\r\n                <li className=\"side-menu__item\">\r\n                    <Link to='/'>\r\n                        <i className={clazzHome} />\r\n                    </Link>\r\n                </li>\r\n                <li className=\"side-menu__item\">\r\n                    <Link to=\"/course\">\r\n                        <i className={clazzCourse} />\r\n                    </Link>\r\n                </li>\r\n                <li className=\"side-menu__item\">\r\n                    <Link to=\"/user\">\r\n                        <i className={clazzUser}/>\r\n                    </Link>\r\n                </li>\r\n                <li className=\"side-menu__item\">\r\n                    <Link to=\"/notification\">\r\n                        <i className={clazzNotification} />\r\n                    </Link>\r\n                </li>\r\n                <li className=\"side-menu__item\">\r\n                    <Link to=\"/settings\">\r\n                        <i className={clazzSettings} />\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n            <div className=\"side-menu__logout\"\r\n                onClick={() => {\r\n                    if (user.login === 'guest') {\r\n                        history.push('/user');\r\n                    } else {\r\n                        onDefaultUser();\r\n                    }\r\n                }}>\r\n                {userButton}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ userState: { user } }) => {\r\n    return { user };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onDefaultUser: setDefaultUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideMenu);","import SideMenu from './side-menu'\r\n\r\nexport default SideMenu;","import App from './app'\r\n\r\nexport default App;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport { HomePage, CoursePage, UserPage, NotificationPage, SettingsPage } from '../pages';\r\nimport SideMenu from '../side-menu';\r\n\r\nimport './app.scss'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"app__wrapper\">\r\n            <div className=\"app__header\"></div>    \r\n            <div className=\"app__sidebar\">\r\n                <SideMenu/>\r\n            </div>\r\n            <div className=\"app__body\">\r\n                <Switch>\r\n                    <Route\r\n                        path=\"/\"\r\n                        component={HomePage}\r\n                        exact\r\n                    />\r\n                    <Route\r\n                        path=\"/course\"\r\n                        component={CoursePage}                            \r\n                    />\r\n                    <Route\r\n                        path=\"/user\"\r\n                        component={UserPage}                            \r\n                    />\r\n                    <Route\r\n                        path=\"/notification\"\r\n                        component={NotificationPage}                            \r\n                    />\r\n                    <Route\r\n                        path=\"/settings\"\r\n                        component={SettingsPage}                            \r\n                    />\r\n                </Switch>\r\n            </div>            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n\r\n    state = {\r\n        hasError: false\r\n    };\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({ hasError: true });\r\n        console.log('***********');\r\n        console.log(error);\r\n        console.log('***********');\r\n        console.log(errorInfo);\r\n        console.log('***********');\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <ErrorIndicator />;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}","\r\nexport default class CoursesService {\r\n\r\n  dataCourses = [\r\n    {\r\n      id: 1,\r\n      title: 'Learn Figma',\r\n      author: 'by Christopher Morgan',\r\n      duration: '6h 30min',\r\n      created: '01.01.2020',\r\n      top: '4',\r\n      rating: '4,9',\r\n      coverImage: '/img/icons/ico_01.png'\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Analog photography',\r\n      author: 'by Gordon Norman',\r\n      duration: '3h 15min',\r\n      created: '01.02.2019',\r\n      top: '3',\r\n      rating: '4,7',\r\n      coverImage: '/img/icons/ico_02.png'\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Master Instagram',\r\n      author: 'by Sophie Gill',\r\n      duration: '7h 40min',\r\n      created: '03.03.2019',\r\n      top: '2',\r\n      rating: '4,6',\r\n      coverImage: '/img/icons/ico_03.png'\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Basics of drawing',\r\n      author: 'by Jean Tate',\r\n      duration: '11h 30min',\r\n      created: '04.04.2020',\r\n      top: '1',\r\n      rating: '4,8',\r\n      coverImage: '/img/icons/ico_04.png'\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'Photoshop - Essence',\r\n      author: 'by David Green',\r\n      duration: '5h 35min',\r\n      created: '01.05.2021',\r\n      top: '0',\r\n      rating: '4,7',\r\n      coverImage: '/img/icons/ico_05.png'\r\n    },\r\n  ];\r\n\r\n  getCourses() {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        //if (Math.random() > 0.75) {\r\n          //reject(new Error('Error once out of four!!! [TESTE-MODE] - Please, refresh the page'));\r\n        //} else {\r\n          resolve(this.dataCourses);\r\n        //}\r\n      }, 500);\r\n    });\r\n  }\r\n  \r\n  dataUser = \r\n  {\r\n    id: 1,\r\n    login: 'SeperUser',\r\n    password: 'React2021',\r\n    name: 'Josh',\r\n  };\r\n  \r\n  dataUserTest = \r\n  {\r\n    id: 2,\r\n    login: '1',\r\n    password: '1',\r\n    name: 'Josh',\r\n  };\r\n  \r\n  getUser(user) {\r\n    /*console.log(user);    \r\n    return new Promise((resolve, reject) => {\r\n      resolve(this.dataUserTest);\r\n    });*/\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if ((this.dataUser.login !== user.login.trim()) &&\r\n          (this.dataUser.password !== user.password.trim())) {\r\n          reject(new Error('User login or password is wrong'))\r\n        } else {\r\n          resolve(this.dataUser);\r\n        }\r\n      }, 500);\r\n    });\r\n  }\r\n\r\n    dataCoursesByUser = [    \r\n    {\r\n      id: 2,\r\n      title: 'Analog photography',\r\n      author: 'by Gordon Norman',\r\n      duration: '3h 15min',\r\n      rating: '4,7',\r\n      progress: '36%',\r\n      coverImage: '/img/icons/ico_02.png'\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Master Instagram',\r\n      author: 'by Sophie Gill',\r\n      duration: '7h 40min',\r\n      rating: '4,6',\r\n      progress: '52%',\r\n      coverImage: '/img/icons/ico_03.png'\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Basics of drawing',\r\n      author: 'by Jean Tate',\r\n      duration: '11h 30min',\r\n      rating: '4,8',\r\n      progress: '93%',\r\n      coverImage: '/img/icons/ico_04.png'\r\n    },\r\n  ];\r\n\r\n  getCoursesByUser(user) {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(this.dataCoursesByUser);\r\n    });\r\n  }\r\n  \r\n}","import { typesCourses } from '../actions/types-for-actions';\r\nimport sortArray from 'sort-array';\r\n\r\n//const sortArray = require('sort-array');\r\n\r\nconst updateCourseList = (state, action) => {\r\n\r\n    if (state === undefined) {\r\n        return {\r\n            courses: [],\r\n            sorted: 'all',\r\n            loading: true,\r\n            error: null\r\n        };\r\n    }\r\n\r\n    const coursesArray = [...state.coursesList.courses]; //Array.from(state.coursesList.courses);\r\n    //sortArray(coursesArray);\r\n    //console.log(state.coursesList.courses);\r\n    //console.log(coursesArray);\r\n\r\n    switch (action.type) {\r\n        case typesCourses.fetch_courses_req://'FETCH_COURSES_REQUEST':\r\n        return {\r\n            courses: [],\r\n            sorted: 'all',\r\n            loading: true,\r\n            error: null\r\n        };\r\n\r\n        case typesCourses.fetch_courses_suc://'FETCH_COURSES_SUCCESS':\r\n        return {\r\n            courses: action.payload,\r\n            sorted: 'all',\r\n            loading: false,\r\n            error: null\r\n        };\r\n\r\n        case typesCourses.fetch_courses_fail://'FETCH_COURSES_FAILURE':\r\n        return {\r\n            courses: [],\r\n            sorted: 'all',\r\n            loading: false,\r\n            error: action.payload\r\n        };\r\n        case typesCourses.all_courses:\r\n            return {};        \r\n        case typesCourses.sort_by_date:\r\n            //console.log(state.coursesList.courses);\r\n            //console.log(coursesArray);    \r\n            sortArray(coursesArray, {\r\n                by: 'created',\r\n                order: 'desc',\r\n            })\r\n            return {                \r\n                courses: coursesArray,\r\n                sorted: 'created',\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case typesCourses.sort_by_top:\r\n            sortArray(coursesArray, {\r\n                by: 'top',\r\n                order: 'desc',\r\n            });\r\n            return {\r\n                courses: coursesArray,\r\n                sorted: 'top',\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case typesCourses.sort_by_rating:\r\n            sortArray(coursesArray, {\r\n                by: 'rating',\r\n                order: 'desc',\r\n            });\r\n            return {\r\n                courses: coursesArray,\r\n                sorted: 'rating',\r\n                loading: false,\r\n                error: null\r\n            };\r\n        default:\r\n        return state.coursesList;\r\n    }\r\n};\r\n\r\nexport default updateCourseList;","import {typesUser} from '../actions/types-for-actions';\r\n\r\nconst updateUser = (state, action) => {\r\n\r\n    const userGuest= { id: 0, login: 'guest',  password: '',  name: 'Guest', };\r\n\r\n    if (state === undefined) {\r\n        return {\r\n            user: userGuest,\r\n            loading: true,\r\n            error: null\r\n        };\r\n    }\r\n\r\n    switch (action.type) {\r\n        case typesUser.fetch_user_req://'FETCH_COURSES_REQUEST':\r\n        return {\r\n            user: userGuest,\r\n            loading: true,\r\n            error: null\r\n        };\r\n\r\n        case typesUser.fetch_user_suc://'FETCH_COURSES_SUCCESS':\r\n            //console.log(action.payload);\r\n            return {            \r\n            user: action.payload,\r\n            loading: false,\r\n            error: null\r\n        };\r\n\r\n        case typesUser.fetch_user_fail://'FETCH_COURSES_FAILURE':\r\n            return {\r\n                user: userGuest,\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        \r\n        case typesUser.set_default_user:\r\n            return {\r\n                user: userGuest,\r\n                loading: true,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n        return state.userState;\r\n    }\r\n};\r\n\r\nexport default updateUser;","import {typesPages} from '../actions/types-for-actions';\r\n\r\nconst updatePages = (state, action) => {\r\n\r\n    if (state === undefined) {\r\n        return {\r\n            pageLabel: 'home-page',\r\n        };\r\n    }\r\n\r\n    switch (action.type) {\r\n\r\n        case typesPages.set_current_page://'FETCH_COURSES_SUCCESS':\r\n        return {\r\n            pageLabel: action.payload,\r\n        };\r\n        default:\r\n            return state.pages;\r\n    }\r\n};\r\n\r\nexport default updatePages;","import {typesCoursesByUser} from '../actions/types-for-actions';\r\n\r\nconst updateCourseByUser = (state, action) => {\r\n\r\n    if (state === undefined) {\r\n        return {\r\n            courses: [],\r\n            loading: true,\r\n            error: null\r\n        };\r\n    }\r\n\r\n    switch (action.type) {\r\n        case typesCoursesByUser.fetch_courses_user_req://'FETCH_COURSES_REQUEST':\r\n        return {\r\n            courses: [],\r\n            loading: true,\r\n            error: null\r\n        };\r\n\r\n        case typesCoursesByUser.fetch_courses_user_suc://'FETCH_COURSES_SUCCESS':\r\n        return {\r\n            courses: action.payload,\r\n            loading: false,\r\n            error: null\r\n        };\r\n\r\n        case typesCoursesByUser.fetch_courses_user_fail://'FETCH_COURSES_FAILURE':\r\n        return {\r\n            courses: [],\r\n            loading: false,\r\n            error: action.payload\r\n        };\r\n\r\n        default:\r\n        return state.coursesByUser;\r\n    }\r\n};\r\n\r\nexport default updateCourseByUser;","import updateCourseList from './course-list';\r\nimport updateUser from './user';\r\nimport updatePages from './pages';\r\nimport updateCourseByUser from './courses-by-user';\r\n\r\nconst reducer = (state, action) => {\r\n    return {\r\n        coursesList: updateCourseList(state, action),\r\n        coursesByUser: updateCourseByUser(state, action),\r\n        userState: updateUser(state, action),\r\n        pages: updatePages(state, action),        \r\n    };\r\n};\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\n\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\n//console.log(store.getState());\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './components/app';\nimport ErrorBoundry from './components/error-boundry/error-boundry';\nimport CoursesService from './services/courses-service';\nimport { CoursesServiceProvider } from './components/courses-service-context/';\n\nimport './scss/index.scss';\n\nimport store from './store';\n\nconst coursesService = new CoursesService();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundry>\n      <CoursesServiceProvider value={coursesService}>\n        <Router>\n          <App />\n        </Router>\n      </CoursesServiceProvider>\n    </ErrorBoundry>\n  </Provider>,\n  document.getElementById('root')\n);\n\n/*ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}